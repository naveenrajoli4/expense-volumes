apiVersion: v1
kind: ConfigMap
metadata:
 name: nginxconfigmap
 namespace: rnk-expense-vol
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;

    # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
    }

    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;

        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;

        # Load modular configuration files from the /etc/nginx/conf.d directory.
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /etc/nginx/conf.d/*.conf;

        server {
            listen       8080 default_server;
            listen       [::]:8080 default_server;
            server_name  _;
            root         /usr/share/nginx/html;

            # Load configuration files for the default server block.
            include /etc/nginx/default.d/*.conf;

          location /api/ {
              proxy_pass http://backend-svc:8080/; # NOTE: ACTUALLY IT SHOULD BE ONLY BACKEND BUT I CHANGED TO BACKEND-SVC TO WORK K8 DEPLOYMENT. ITS SERVICE TO SERVICE COMMUNICATION.
          }

            # The below is for HOST NETWORK
          # location /api/ {
            # 	proxy_pass http://localhost:8080/;
          # }
          
            error_page 404 /404.html;
                location = /40x.html {
            }

            error_page 500 502 503 504 /50x.html;
                location = /50x.html {
            }
        }

    }
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: frontend
  namespace: rnk-expense-vol
  labels:
    app: frontend
    tier: web
    project: expense
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      tier: web
      project: expense
  template:
    metadata:
      labels:
        app: frontend
        tier: web
        project: expense
    spec:
      volumes:
      - name: nginx
        configMap:
          name: nginxconfigmap
          items:
            - key: nginx.conf
              path: nginx.conf
      containers:
      - name: frontend
        image: naveenrajoli/frontend:1.2
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: rnk-expense-vol
spec:
  type: LoadBalancer
  selector: 
    app: frontend
    tier: web
    project: expense
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080


