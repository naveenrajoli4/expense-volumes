apiVersion: v1
kind: Service
metadata:
  name: mysql-headless-svc
  namespace: rnk-expense-vol
  labels:
    app: mysql
    project: expense
    tire: database
spec:
  selector:
    app: mysql
    project: expense
    tire: database
  clusterIP: None  # Makes the service headless
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  namespace: rnk-expense-vol
  labels:
    app: mysql
    project: expense
    tire: database
spec: 
  selector: # labels are used as selectors
  labels:
    app: mysql
    project: expense
    tire: database
  ports:
  - protocol: TCP
    port: 3306 # service port
    targetPort: 3306
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: rnk-expense-vol
spec:
  selector:
    matchLabels:
      app: mysql
      project: expense
      tire: database # has to match .spec.template.metadata.labels
  serviceName: "mysql-headless-svc"
  replicas: 2 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mysql
        project: expense
        tire: database # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql
        image: naveenrajoli/mysql:1.0
        volumeMounts:
        - name: mysql-vol
          mountPath: /var/lib/mysql
  # Instead of creating a PVC resource, you can directly provide in statefulset
  volumeClaimTemplates:
  - metadata:
      name: nginx-vol
      namespace: rnk-expense-vol
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "mysql-ebs-sc"
      resources:
        requests:
          storage: 1Gi
